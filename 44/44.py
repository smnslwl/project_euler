"""
   Pentagonal numbers are generated by the formula, P[n]=n(3n−1)/2. The first
   ten pentagonal numbers are:

                  1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

   It can be seen that P[4] + P[7] = 22 + 70 = 92 = P[8]. However, their
   difference, 70 − 22 = 48, is not pentagonal.

   Find the pair of pentagonal numbers, P[j] and P[k], for which their sum
   and difference are pentagonal and D = |P[k] − P[j]| is minimised; what is
   the value of D?
"""

from itertools import permutations

def P(n):
    """Return the nth pentagonal number"""
    return n * (3 * n - 1) // 2
    
if __name__ == '__main__':

    upper = 5000
    pents = {P(i) for i in range(1, upper)}    
    for p1, p2 in permutations(pents, 2):
        D = abs(p1 - p2)
        if D in pents and p1 + p2 in pents:
            break
    
    print(D)

"""
NOTE:
The first solution is the correct one as well. 
Haven't found a proof why that is, though.
Upper bound obtained by trial and error.
"""
